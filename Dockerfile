FROM python:3.13-slim
# Использует базовый образ Python 3.13 в облегченной версии (slim)
# Это уменьшает размер образа, сохраняя необходимую функциональность Python

WORKDIR /dronetermsai
# Устанавливает рабочую директорию внутри контейнера

# Установка системных зависимостей для работы с PDF и DOCX
RUN apt-get update && apt-get install -y \
    poppler-utils \
    && rm -rf /var/lib/apt/lists/*
# Обновляет пакетный менеджер и устанавливает poppler-utils
# poppler-utils необходим для работы с PDF-файлами
# Удаляет кэш apt для уменьшения размера образа

# Копирование файлов проекта
COPY requirements.txt .
# Копирует файл requirements.txt в рабочую директорию

RUN pip install --no-cache-dir -r requirements.txt
# Устанавливает Python-зависимости из файла requirements.txt
# Флаг --no-cache-dir предотвращает сохранение кэша pip, уменьшая размер образа

# Копирование всего проекта
COPY . .
# Копирует все файлы проекта в рабочую директорию

# Создание необходимых директорий
RUN mkdir -p results/csv results/excel db
# Создает структуру директорий для хранения результатов и базы данных
# results/csv - для CSV-файлов с результатами
# results/excel - для Excel-файлов с результатами
# db - для файлов базы данных

# Установка прав на директории
RUN chmod -R 777 results db data
# Устанавливает полные права доступа (чтение/запись/выполнение) для всех пользователей
# на директории results, db и data
# Это обеспечивает возможность записи в эти директории из контейнера

CMD ["python", "main.py"]
# Задает команду, которая будет выполнена при запуске контейнера
# Запускает основной скрипт приложения main.py


# ****************************************************************************************************************
# Этот Dockerfile настраивает образ для запуска приложения Python, которое обрабатывает PDF и DOCX файлы.
# Он устанавливает необходимые системные зависимости, копирует файлы проекта, создает необходимые директории и
# запускает основной скрипт приложения.

# Для запуска приложения, необходимо собрать образ с помощью команды docker build -t dronetermsai .,
# где dronetermsai - имя образа. Затем запустить контейнер с помощью команды docker run -it dronetermsai.